<!DOCTYPE html>
<html lang="en" ng-app="todoApp" manifest="/todo/cache.appcache">
<head>
    <meta charset="utf-8">
    <title>Todo</title>
    {% stylesheets
    '@CorujaTodoBundle/Resources/public/css/app.css'
    output='css/compiled/todo/main.css'
    %}
    <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}
</head>
<body>

{% raw %}

<section id="todoapp" ng-controller="TodoCtrl">
    <header id="header">
        <h1>todos {{online_status_string}}</h1>
        <form id="todo-form" ng-submit="addTodo()">
            <input id="new-todo" placeholder="What needs to be done?" ng-model="newTodo" autofocus>
        </form>
    </header>
    <section id="main" ng-show="todos.length" ng-cloak>
        <input id="toggle-all" type="checkbox" ng-model="allChecked" ng-click="markAll(allChecked)">
        <label for="toggle-all">Mark all as complete</label>
        <ul id="todo-list">
            <li ng-repeat="todo in todos | filter:statusFilter" ng-dblclick="editTodo(todo)" ng-class="{completed: todo.completed, editing: todo == editedTodo}">
                <div class="view">
                    <input class="toggle" type="checkbox" ng-model="todo.completed" ng-change="todoCompleted(todo)">
                    <label>{{todo.title}} ID: {{todo.id}}</label>
                    <button class="destroy" ng-click="deleteTodo(todo)"></button>
                </div>
                <form ng-submit="doneEditing(todo)">
                    <input class="edit" ng-model="todo.title" todo-blur="doneEditing(todo)" todo-focus="todo == editedTodo">
                </form>
            </li>
        </ul>
    </section>
    <footer id="footer" ng-show="todos.length" ng-cloak>
      <span id="todo-count"><strong>{{remainingCount}}</strong>
        <ng-pluralize count="remainingCount" when="{ one: 'item left', other: 'items left' }"></ng-pluralize>
      </span>
        <ul id="filters">
            <li>
                <a ng-class="{selected: location.path() == '/'} " href="#/">All</a>
            </li>
            <li>
                <a ng-class="{selected: location.path() == '/active'}" href="#/active">Active</a>
            </li>
            <li>
                <a ng-class="{selected: location.path() == '/completed'}" href="#/completed">Completed</a>
            </li>
        </ul>
        <button id="clear-completed" ng-click="clearDoneTodos()" ng-show="doneCount">Clear completed ({{doneCount}})</button>
    </footer>
</section>

{% endraw %}

{% javascripts
    '@CorujaTodoBundle/Resources/public/js/lib/angular/angular.js'
    '@CorujaTodoBundle/Resources/public/js/lib/angular/angular-resource.js'
    '@CorujaTodoBundle/Resources/public/js/app.js'
    '@CorujaTodoBundle/Resources/public/js/controllers.js'
    '@CorujaTodoBundle/Resources/public/js/directives/todoBlur.js'
    '@CorujaTodoBundle/Resources/public/js/directives/todoFocus.js'
    '@CorujaTodoBundle/Resources/public/js/services/coruja-online-status.js'
    '@CorujaTodoBundle/Resources/public/js/services/coruja-storage.js'
    '@CorujaTodoBundle/Resources/public/js/services/coruja-resource.js'
    '@CorujaTodoBundle/Resources/public/js/services/todo-service.js'
    output='js/compiled/todo/main.js'
%}
<script src="{{ asset_url }}"></script>
{% endjavascripts %}


<script type="text/javascript">
    var cacheStatusValues = [];
    cacheStatusValues[0] = 'uncached';
    cacheStatusValues[1] = 'idle';
    cacheStatusValues[2] = 'checking';
    cacheStatusValues[3] = 'downloading';
    cacheStatusValues[4] = 'updateready';
    cacheStatusValues[5] = 'obsolete';

    var cache = window.applicationCache;
    cache.addEventListener('cached', logEvent, false);
    cache.addEventListener('checking', logEvent, false);
    cache.addEventListener('downloading', logEvent, false);
    cache.addEventListener('error', logEvent, false);
    cache.addEventListener('noupdate', logEvent, false);
    cache.addEventListener('obsolete', logEvent, false);
    cache.addEventListener('progress', logEvent, false);
    cache.addEventListener('updateready', logEvent, false);

    function logEvent(e) {
        var online, status, type, message;
        online = (navigator.onLine) ? 'yes' : 'no';
        status = cacheStatusValues[cache.status];
        type = e.type;
        message = 'online: ' + online;
        message+= ', event: ' + type;
        message+= ', status: ' + status;
        if (type == 'error' && navigator.onLine) {
            message+= ' (prolly a syntax error in manifest)';
        }
        console.log(message);
    }

    window.applicationCache.addEventListener(
            'updateready',
            function(){
                window.applicationCache.swapCache();
                console.log('swap cache has been called');
            },
            false
    );

    setInterval(function(){cache.update()}, 10000);
</script>


</html>